version: '3.8'

services:
  wazuh:
    image: wazuh/wazuh-manager:4.7.0
    hostname: wazuh-manager
    restart: always
    ports:
      - "1514:1514"
      - "1515:1515"
      - "514:514/udp"
      - "55000:55000"
    environment:
      - WAZUH_MANAGER_NAME=wazuh-manager
      - WAZUH_MANAGER_REGISTRATION_SERVER=wazuh-manager
      - WAZUH_MANAGER_REGISTRATION_PASSWORD=${WAZUH_REGISTRATION_PASSWORD}
      - WAZUH_MANAGER_REGISTRATION_CA=${WAZUH_REGISTRATION_CA}
      - WAZUH_MANAGER_REGISTRATION_CERT=${WAZUH_REGISTRATION_CERT}
      - WAZUH_MANAGER_REGISTRATION_KEY=${WAZUH_REGISTRATION_KEY}
    volumes:
      - ./config/wazuh/ossec.conf:/var/ossec/etc/ossec.conf:ro
      - ./config/wazuh/local_internal_options.conf:/var/ossec/etc/local_internal_options.conf:ro
      - wazuh_data:/var/ossec/data
      - wazuh_logs:/var/ossec/logs
      - wazuh_queue:/var/ossec/queue
      - wazuh_var_multi:/var/ossec/var/multigroups
      - wazuh_integrations:/var/ossec/integrations
      - wazuh_active_response:/var/ossec/active-response/bin
      - wazuh_agentless:/var/ossec/agentless
      - wazuh_wodles:/var/ossec/wodles
      - wazuh_filebeat:/var/ossec/filebeat
      - wazuh_ml:/var/ossec/ml
    networks:
      - wazuh-net
    depends_on:
      - elasticsearch

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.9
    hostname: elasticsearch
    restart: always
    environment:
      - node.name=elasticsearch
      - cluster.name=es-wazuh
      - cluster.initial_master_nodes=elasticsearch
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms2g -Xmx2g"
      - xpack.security.enabled=true
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ./config/elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
      - elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
      - wazuh-net

  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.9
    hostname: kibana
    restart: always
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - ELASTICSEARCH_USERNAME=elastic
      - ELASTICSEARCH_PASSWORD=${ELASTIC_PASSWORD}
    volumes:
      - ./config/kibana/kibana.yml:/usr/share/kibana/config/kibana.yml:ro
    networks:
      - wazuh-net
    depends_on:
      - elasticsearch

  ml-engine:
    build:
      context: ./src/ml
      dockerfile: Dockerfile
    hostname: ml-engine
    restart: always
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - ELASTICSEARCH_USERNAME=elastic
      - ELASTICSEARCH_PASSWORD=${ELASTIC_PASSWORD}
      - MODEL_STORAGE_PATH=/app/models
      - LOG_LEVEL=INFO
    volumes:
      - ./config/ml/config.yml:/app/config/config.yml:ro
      - ml_models:/app/models
    networks:
      - wazuh-net
    depends_on:
      - elasticsearch

  vault:
    image: hashicorp/vault:1.13.3
    hostname: vault
    restart: always
    ports:
      - "8200:8200"
    environment:
      - VAULT_DEV_ROOT_TOKEN_ID=${VAULT_ROOT_TOKEN}
      - VAULT_DEV_LISTEN_ADDRESS=0.0.0.0:8200
    cap_add:
      - IPC_LOCK
    volumes:
      - vault_data:/vault/data
    networks:
      - wazuh-net

networks:
  wazuh-net:
    driver: bridge

volumes:
  wazuh_data:
  wazuh_logs:
  wazuh_queue:
  wazuh_var_multi:
  wazuh_integrations:
  wazuh_active_response:
  wazuh_agentless:
  wazuh_wodles:
  wazuh_filebeat:
  wazuh_ml:
  elasticsearch_data:
  ml_models:
  vault_data: 